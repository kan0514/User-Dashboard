// file: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid()) // Using uuid() as per original plan
  email        String        @unique
  password     String
  name         String
  profileUrl   String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt // Added missing updatedAt field
  
  // FIX: Added the reciprocal field for the AuthSession model
  sessions     AuthSession[]
  transactions Transaction[]
}

model AuthSession {
  id          String    @id @default(uuid())
  userId      String
  jwtId       String    @unique
  expiresAt   DateTime
  createdAt   DateTime  @default(now())
  
  // No need for a custom name here if no other relation exists between User and AuthSession
  user        User      @relation(fields: [userId], references: [id])
}


// Restoring the Category and fixing the Transaction model for proper relations
model Category {
  id           String        @id @default(uuid())
  name         String        @unique
  icon         String?       
  transactions Transaction[]
}

model Transaction {
  id          String    @id @default(uuid())
  userId      String
  categoryId  String    // Added to link to Category model
  amount      Float
  type        String    // e.g., 'INCOME', 'EXPENSE'
  description String?   // Using 'description' instead of 'note' for clarity
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id])
  category    Category  @relation(fields: [categoryId], references: [id])
  
  @@index([userId, categoryId])
}